# -*- coding: utf-8 -*-
# Generated by Django 1.11.26 on 2019-11-13 06:45
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Config',
                'verbose_name_plural': 'Config',
            },
        ),
        migrations.CreateModel(
            name='ContentExecutive',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ContentExecutive',
                'verbose_name_plural': 'ContentExecutives',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContentManager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ContentManager',
                'verbose_name_plural': 'ContentManagers',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExportList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=b'SampleExportList', max_length=100)),
                ('created_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ExportList',
                'verbose_name_plural': 'ExportLists',
            },
        ),
        migrations.CreateModel(
            name='Flyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=b'SampleFlyer', max_length=100)),
                ('template_data', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Flyer',
                'verbose_name_plural': 'Flyers',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to=b'')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=b'thumbnails')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='ImageBucket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_main_image', models.BooleanField(default=False)),
                ('is_sub_image', models.BooleanField(default=False)),
                ('sub_image_index', models.IntegerField(default=0)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WAMSApp.Image')),
            ],
            options={
                'verbose_name': 'Image Bucket',
                'verbose_name_plural': 'Image Buckets',
            },
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'MaterialType',
                'verbose_name_plural': 'MaterialTypes',
            },
        ),
        migrations.CreateModel(
            name='PFL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=b'SamplePFL', max_length=100)),
                ('external_images_bucket', models.ManyToManyField(blank=True, to='WAMSApp.Image')),
            ],
            options={
                'verbose_name': 'PFL',
                'verbose_name_plural': 'PFL',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default=b'Pending', max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('pfl_product_name', models.CharField(default=b'', max_length=250)),
                ('pfl_product_features', models.TextField(default=b'[]')),
                ('product_name_sap', models.CharField(default=b'', max_length=300)),
                ('product_name_amazon_uk', models.CharField(default=b'', max_length=300)),
                ('product_name_amazon_uae', models.CharField(default=b'', max_length=300)),
                ('product_name_ebay', models.CharField(default=b'', max_length=300)),
                ('product_id', models.CharField(max_length=100, unique=True)),
                ('product_id_type', models.CharField(default=b'', max_length=100)),
                ('seller_sku', models.CharField(default=b'', max_length=100)),
                ('category', models.CharField(default=b'', max_length=100)),
                ('subtitle', models.CharField(default=b'', max_length=300)),
                ('manufacturer', models.CharField(default=b'', max_length=200)),
                ('manufacturer_part_number', models.CharField(default=b'', max_length=200)),
                ('condition_type', models.CharField(default=b'New', max_length=100)),
                ('feed_product_type', models.CharField(default=b'', max_length=100)),
                ('update_delete', models.CharField(default=b'Update', max_length=100)),
                ('recommended_browse_nodes', models.CharField(default=b'', max_length=100)),
                ('product_description_amazon_uk', models.TextField(default=b'')),
                ('product_description_amazon_uae', models.TextField(default=b'')),
                ('product_description_ebay', models.TextField(default=b'')),
                ('product_attribute_list_amazon_uk', models.TextField(default=b'[]')),
                ('product_attribute_list_amazon_uae', models.TextField(default=b'[]')),
                ('product_attribute_list_ebay', models.TextField(default=b'[]')),
                ('search_terms', models.CharField(default=b'', max_length=300)),
                ('color_map', models.CharField(default=b'', max_length=100)),
                ('color', models.CharField(default=b'', max_length=100)),
                ('enclosure_material', models.CharField(default=b'', max_length=100)),
                ('cover_material_type', models.CharField(default=b'', max_length=100)),
                ('special_features', models.TextField(default=b'[]')),
                ('package_length', models.FloatField(blank=True, null=True)),
                ('package_length_metric', models.CharField(default=b'', max_length=100)),
                ('package_width', models.FloatField(blank=True, null=True)),
                ('package_width_metric', models.CharField(default=b'', max_length=100)),
                ('package_height', models.FloatField(blank=True, null=True)),
                ('package_height_metric', models.CharField(default=b'', max_length=100)),
                ('package_weight', models.FloatField(blank=True, null=True)),
                ('package_weight_metric', models.CharField(default=b'', max_length=100)),
                ('shipping_weight', models.FloatField(blank=True, null=True)),
                ('shipping_weight_metric', models.CharField(default=b'', max_length=100)),
                ('item_display_weight', models.FloatField(blank=True, null=True)),
                ('item_display_weight_metric', models.CharField(default=b'', max_length=100)),
                ('item_display_volume', models.FloatField(blank=True, null=True)),
                ('item_display_volume_metric', models.CharField(default=b'', max_length=100)),
                ('item_display_length', models.FloatField(blank=True, null=True)),
                ('item_display_length_metric', models.CharField(default=b'', max_length=100)),
                ('item_weight', models.FloatField(blank=True, null=True)),
                ('item_weight_metric', models.CharField(default=b'', max_length=100)),
                ('item_length', models.FloatField(blank=True, null=True)),
                ('item_length_metric', models.CharField(default=b'', max_length=100)),
                ('item_width', models.FloatField(blank=True, null=True)),
                ('item_width_metric', models.CharField(default=b'', max_length=100)),
                ('item_height', models.FloatField(blank=True, null=True)),
                ('item_height_metric', models.CharField(default=b'', max_length=100)),
                ('item_display_width', models.FloatField(blank=True, null=True)),
                ('item_display_width_metric', models.CharField(default=b'', max_length=100)),
                ('item_display_height', models.FloatField(blank=True, null=True)),
                ('item_display_height_metric', models.CharField(default=b'', max_length=100)),
                ('item_condition_note', models.TextField(default=b'')),
                ('max_order_quantity', models.IntegerField(blank=True, null=True)),
                ('number_of_items', models.IntegerField(blank=True, null=True)),
                ('wattage', models.FloatField(blank=True, null=True)),
                ('wattage_metric', models.CharField(default=b'', max_length=100)),
                ('material_type', models.CharField(default=b'', max_length=100)),
                ('parentage', models.CharField(default=b'', max_length=100)),
                ('parent_sku', models.CharField(default=b'', max_length=100)),
                ('relationship_type', models.CharField(default=b'', max_length=100)),
                ('variation_theme', models.CharField(default=b'', max_length=100)),
                ('standard_price', models.FloatField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('sale_price', models.FloatField(blank=True, null=True)),
                ('sale_from', models.DateField(blank=True, null=True)),
                ('sale_end', models.DateField(blank=True, null=True)),
                ('barcode_string', models.CharField(default=b'', max_length=100)),
                ('outdoor_price', models.FloatField(blank=True, null=True)),
                ('ads_images', models.ManyToManyField(blank=True, related_name='ads_images', to='WAMSApp.Image')),
                ('aplus_content_images', models.ManyToManyField(blank=True, related_name='aplus_content_images', to='WAMSApp.Image')),
                ('barcode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WAMSApp.Image')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='WAMSApp.Brand')),
                ('certificate_images', models.ManyToManyField(blank=True, related_name='certificate_images', to='WAMSApp.Image')),
                ('diecut_images', models.ManyToManyField(blank=True, related_name='diecut_images', to='WAMSApp.Image')),
                ('giftbox_images', models.ManyToManyField(blank=True, related_name='giftbox_images', to='WAMSApp.Image')),
                ('lifestyle_images', models.ManyToManyField(blank=True, related_name='lifestyle_images', to='WAMSApp.Image')),
                ('main_images', models.ManyToManyField(blank=True, related_name='main_images', to='WAMSApp.ImageBucket')),
                ('pfl_generated_images', models.ManyToManyField(blank=True, related_name='pfl_generated_images', to='WAMSApp.Image')),
                ('pfl_images', models.ManyToManyField(blank=True, related_name='pfl_images', to='WAMSApp.Image')),
                ('sub_images', models.ManyToManyField(blank=True, related_name='sub_images', to='WAMSApp.ImageBucket')),
                ('unedited_images', models.ManyToManyField(blank=True, related_name='unedited_images', to='WAMSApp.Image')),
                ('white_background_images', models.ManyToManyField(blank=True, related_name='white_background_images', to='WAMSApp.Image')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductIDType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'ProductIDType',
                'verbose_name_plural': 'ProductIDTypes',
            },
        ),
        migrations.AddField(
            model_name='pfl',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WAMSApp.Product'),
        ),
        migrations.AddField(
            model_name='pfl',
            name='product_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_images', to='WAMSApp.Image'),
        ),
        migrations.AddField(
            model_name='flyer',
            name='background_images_bucket',
            field=models.ManyToManyField(blank=True, related_name='background_images_bucket', to='WAMSApp.Image'),
        ),
        migrations.AddField(
            model_name='flyer',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WAMSApp.Brand'),
        ),
        migrations.AddField(
            model_name='flyer',
            name='external_images_bucket',
            field=models.ManyToManyField(blank=True, to='WAMSApp.Image'),
        ),
        migrations.AddField(
            model_name='flyer',
            name='flyer_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flyer_images', to='WAMSApp.Image'),
        ),
        migrations.AddField(
            model_name='flyer',
            name='product_bucket',
            field=models.ManyToManyField(blank=True, to='WAMSApp.Product'),
        ),
        migrations.AddField(
            model_name='exportlist',
            name='products',
            field=models.ManyToManyField(blank=True, to='WAMSApp.Product'),
        ),
        migrations.AddField(
            model_name='config',
            name='product_404_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WAMSApp.Image'),
        ),
        migrations.AddField(
            model_name='brand',
            name='logo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WAMSApp.Image'),
        ),
    ]
