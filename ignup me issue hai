[33mcommit b28241d0ece796fdb22ef0e6d1d2b724d60a14e4[m[33m ([m[1;36mHEAD -> [m[1;32mFeature/B2B[m[33m)[m
Author: Sparsh <sparshgoil1999@gmail.com>
Date:   Thu Feb 11 12:27:56 2021 +0530

    modify apis for cohort functionality

[1mdiff --git a/dealshub/views.py b/dealshub/views.py[m
[1mindex 90bbf99b..f486c787 100644[m
[1m--- a/dealshub/views.py[m
[1m+++ b/dealshub/views.py[m
[36m@@ -70,6 +70,11 @@[m [mclass FetchProductDetailsAPI(APIView):[m
             product_obj = dealshub_product_obj.product[m
             base_product_obj = product_obj.base_product[m
 [m
[32m+[m[32m            dealshub_user_obj = None[m
[32m+[m[32m            if request.user != None and str(request.user)!="AnonymousUser":[m
[32m+[m[32m                logger.info("FetchProductDetailsAPI REQUEST USER: %s", str(request.user))[m
[32m+[m[32m                dealshub_user_obj = DealsHubUser.objects.get(username=request.user.username)[m
[32m+[m
             response["brand"] = dealshub_product_obj.get_brand(language_code)[m
             response["superCategory"] = dealshub_product_obj.get_super_category(language_code)[m
             response["category"] = dealshub_product_obj.get_category(language_code)[m
[36m@@ -77,10 +82,10 @@[m [mclass FetchProductDetailsAPI(APIView):[m
             response["uuid"] = data["uuid"][m
             response["name"] = dealshub_product_obj.get_name(language_code)[m
             response["stock"] = dealshub_product_obj.stock[m
[31m-            response["moq"] = dealshub_product_obj.moq[m
[32m+[m[32m            response["moq"] = dealshub_product_obj.get_moq(dealshub_user_obj)[m
             response["allowedQty"] = dealshub_product_obj.get_allowed_qty()[m
[31m-            response["price"] = dealshub_product_obj.get_actual_price()[m
[31m-            response["wasPrice"] = dealshub_product_obj.was_price[m
[32m+[m[32m            response["price"] = dealshub_product_obj.get_actual_price(dealshub_user_obj)[m
[32m+[m[32m            response["wasPrice"] = dealshub_product_obj.get_was_price(dealshub_user_obj)[m
             response["currency"] = dealshub_product_obj.get_currency()[m
             response["warranty"] = dealshub_product_obj.get_warranty()[m
 [m
[36m@@ -311,13 +316,10 @@[m [mclass FetchOnSaleProductsAPI(APIView):[m
             [m
             dealshub_product_objs = DealsHubProduct.objects.filter(location_group=location_group_obj, product__base_product__brand__in=website_group_obj.brands.all(), is_published=True, is_on_sale=True).exclude(now_price=0).exclude(stock=0).order_by('-is_promotional').prefetch_related('promotion')[m
 [m
[31m-            is_user_authenticated = True[m
             if location_group_obj.is_b2b==True:[m
[31m-                b2b_user_obj = None[m
                 if request.user != None and str(request.user)!="AnonymousUser":[m
[31m-                    logger.info("REQUEST USER: %s", str(request.user))[m
[31m-                    b2b_user_obj = B2BUser.objects.get(username = request.user.username)[m
[31m-                is_user_authenticated = check_account_status(b2b_user_obj)[m
[32m+[m[32m                    logger.info("FetchOnSaleProductsAPI REQUEST USER: %s", str(request.user))[m
[32m+[m[32m                    dealshub_user_obj = DealsHubUser.objects.get(username = request.user.username)[m
 [m
             page = int(data.get("page",1))[m
             paginator = Paginator(dealshub_product_objs, 50)[m
[36m@@ -331,10 +333,10 @@[m [mclass FetchOnSaleProductsAPI(APIView):[m
                 temp_dict2 = {}[m
                 temp_dict2["name"] = dealshub_product_obj.get_name(language_code)[m
                 temp_dict2["brand"] = dealshub_product_obj.get_brand(language_code)[m
[31m-                temp_dict2["now_price"] = dealshub_product_obj.now_price[m
[31m-                temp_dict2["was_price"] = dealshub_product_obj.was_price[m
[31m-                temp_dict2["promotional_price"] = dealshub_product_obj.promotional_price[m
[31m-                temp_dict2["moq"] = dealshub_product_obj.moq[m
[32m+[m[32m                temp_dict2["now_price"] = dealshub_product_obj.get_now_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict2["was_price"] = dealshub_product_obj.get_was_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict2["promotional_price"] = dealshub_product_obj.get_promotional_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict2["moq"] = dealshub_product_obj.get_moq(dealshub_user_obj)[m
                 temp_dict2["stock"] = dealshub_product_obj.stock[m
                 temp_dict2["allowedQty"] = dealshub_product_obj.get_allowed_qty()[m
                 temp_dict2["isStockAvailable"] = dealshub_product_obj.stock>0[m
[36m@@ -386,13 +388,11 @@[m [mclass FetchNewArrivalProductsAPI(APIView):[m
             [m
             dealshub_product_objs = DealsHubProduct.objects.filter(location_group=location_group_obj, product__base_product__brand__in=website_group_obj.brands.all(), is_published=True, is_new_arrival=True).exclude(now_price=0).exclude(stock=0).order_by('-product__created_date').prefetch_related('promotion')[m
 [m
[31m-            is_user_authenticated = True[m
[32m+[m[32m            dealshub_user_obj = None[m
             if location_group_obj.is_b2b==True:[m
[31m-                b2b_user_obj = None[m
                 if request.user != None and str(request.user)!="AnonymousUser":[m
[31m-                    logger.info("REQUEST USER: %s", str(request.user))[m
[31m-                    b2b_user_obj = B2BUser.objects.get(username = request.user.username)[m
[31m-                is_user_authenticated = check_account_status(b2b_user_obj)[m
[32m+[m[32m                    logger.info("FetchNewArrivalProductsAPI REQUEST USER: %s", str(request.user))[m
[32m+[m[32m                    dealshub_user_obj = DealsHubUser.objects.get(username = request.user.username)[m
 [m
             page = int(data.get("page",1))[m
             paginator = Paginator(dealshub_product_objs, 50)[m
[36m@@ -406,10 +406,10 @@[m [mclass FetchNewArrivalProductsAPI(APIView):[m
                 temp_dict2 = {}[m
                 temp_dict2["name"] = dealshub_product_obj.get_name(language_code)[m
                 temp_dict2["brand"] = dealshub_product_obj.get_brand(language_code)[m
[31m-                temp_dict2["now_price"] = dealshub_product_obj.now_price[m
[31m-                temp_dict2["was_price"] = dealshub_product_obj.was_price[m
[31m-                temp_dict2["promotional_price"] = dealshub_product_obj.promotional_price[m
[31m-                temp_dict2["moq"] = dealshub_product_obj.moq[m
[32m+[m[32m                temp_dict2["now_price"] = dealshub_product_obj.get_now_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict2["was_price"] = dealshub_product_obj.get_was_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict2["promotional_price"] = dealshub_product_obj.get_promotional_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict2["moq"] = dealshub_product_obj.get_moq(dealshub_user_obj)[m
                 temp_dict2["stock"] = dealshub_product_obj.stock[m
                 temp_dict2["allowedQty"] = dealshub_product_obj.get_allowed_qty()[m
                 temp_dict2["isStockAvailable"] = dealshub_product_obj.stock>0[m
[36m@@ -1057,6 +1057,11 @@[m [mclass SearchWIGAPI(APIView):[m
             brand_name = data.get("brand", "").strip()[m
             page_type = data.get("page_type", "").strip()[m
 [m
[32m+[m[32m            dealshub_user_obj = None[m
[32m+[m[32m            if request.user != None and str(request.user)!="AnonymousUser":[m
[32m+[m[32m                logger.info("FetchProductDetailsAPI REQUEST USER: %s", str(request.user))[m
[32m+[m[32m                dealshub_user_obj = DealsHubUser.objects.get(username=request.user.username)[m
[32m+[m
             page_description = ""[m
             seo_title = ""[m
             seo_keywords = ""[m
[36m@@ -1234,9 +1239,9 @@[m [mclass SearchWIGAPI(APIView):[m
                     temp_dict["name"] = dealshub_product_obj.get_name(language_code)[m
                     temp_dict["brand"] = dealshub_product_obj.get_brand(language_code)[m
                     temp_dict["seller_sku"] = dealshub_product_obj.get_seller_sku()[m
[31m-                    temp_dict["now_price"] = dealshub_product_obj.now_price[m
[31m-                    temp_dict["was_price"] = dealshub_product_obj.was_price[m
[31m-                    temp_dict["promotional_price"] = dealshub_product_obj.promotional_price[m
[32m+[m[32m                    temp_dict["now_price"] = dealshub_product_obj.get_now_price(dealshub_user_obj)[m
[32m+[m[32m                    temp_dict["was_price"] = dealshub_product_obj.get_was_price(dealshub_user_obj)[m
[32m+[m[32m                    temp_dict["promotional_price"] = dealshub_product_obj.get_promotional_price(dealshub_user_obj)[m
                     temp_dict["stock"] = dealshub_product_obj.stock[m
                     temp_dict["is_new_arrival"] = dealshub_product_obj.is_new_arrival[m
                     temp_dict["is_on_sale"] = dealshub_product_obj.is_on_sale[m
[36m@@ -1294,6 +1299,7 @@[m [mclass SearchWIG2API(APIView):[m
             location_group_obj = LocationGroup.objects.get(uuid=location_group_uuid)[m
             website_group_obj = location_group_obj.website_group[m
 [m
[32m+[m[32m            dealshub_user_obj = None[m
             is_user_authenticated = True[m
             if location_group_obj.is_b2b==True:[m
                 b2b_user_obj = None[m
[36m@@ -1301,6 +1307,7 @@[m [mclass SearchWIG2API(APIView):[m
                 if request.user != None and str(request.user)!="AnonymousUser":[m
                     logger.info("REQUEST USER: %s", str(request.user))[m
                     b2b_user_obj = B2BUser.objects.get(username = request.user.username)[m
[32m+[m[32m                    dealshub_user_obj = DealsHubUser.objects.get(username = request.user.username)[m
                 is_user_authenticated = check_account_status(b2b_user_obj)[m
 [m
             page_description = ""[m
[36m@@ -1478,10 +1485,10 @@[m [mclass SearchWIG2API(APIView):[m
                     temp_dict["name"] = dealshub_product_obj.get_name()[m
                     temp_dict["brand"] = dealshub_product_obj.get_brand()[m
                     temp_dict["seller_sku"] = dealshub_product_obj.get_seller_sku()[m
[31m-                    temp_dict["now_price"] = dealshub_product_obj.now_price[m
[31m-                    temp_dict["was_price"] = dealshub_product_obj.was_price[m
[31m-                    temp_dict["promotional_price"] = dealshub_product_obj.promotional_price[m
[31m-                    temp_dict["moq"] = dealshub_product_obj.moq[m
[32m+[m[32m                    temp_dict["now_price"] = dealshub_product_obj.get_now_price(dealshub_user_obj)[m
[32m+[m[32m                    temp_dict["was_price"] = dealshub_product_obj.get_was_price(dealshub_user_obj)[m
[32m+[m[32m                    temp_dict["promotional_price"] = dealshub_product_obj.get_promotional_price(dealshub_user_obj)[m
[32m+[m[32m                    temp_dict["moq"] = dealshub_product_obj.get_moq(dealshub_user_obj)[m
                     temp_dict["stock"] = dealshub_product_obj.stock[m
                     temp_dict["is_new_arrival"] = dealshub_product_obj.is_new_arrival[m
                     temp_dict["is_on_sale"] = dealshub_product_obj.is_on_sale[m
[36m@@ -2958,9 +2965,11 @@[m [mclass FetchB2BDealshubAdminSectionsAPI(APIView):[m
             location_group_obj = LocationGroup.objects.get(uuid=location_group_uuid)[m
 [m
             b2b_user_obj = None[m
[32m+[m[32m            dealshub_user_obj = None[m
             if request.user != None and str(request.user)!="AnonymousUser":[m
                 logger.info("REQUEST USER: %s", str(request.user))[m
                 b2b_user_obj = B2BUser.objects.get(username = request.user.username)[m
[32m+[m[32m                dealshub_user_obj = DealsHubUser.objects.get(username=request.user.username)[m
             is_user_authenticated = check_account_status(b2b_user_obj)[m
 [m
             resolution = data.get("resolution", "low")[m
[36m@@ -3081,16 +3090,11 @@[m [mclass FetchB2BDealshubAdminSectionsAPI(APIView):[m
                         temp_dict2["currency"] = dealshub_product_obj.get_currency()[m
 [m
                     promotion_obj = dealshub_product_obj.promotion[m
[31m-                    [m
[31m-                    if is_user_authenticated == True:[m
[31m-                        temp_dict2["promotional_price"] = dealshub_product_obj.promotional_price[m
[31m-                        temp_dict2["now_price"] = dealshub_product_obj.now_price[m
[31m-                        temp_dict2["was_price"] = dealshub_product_obj.was_price[m
[31m-                        temp_dict2["moq"] = dealshub_product_obj.moq[m
[31m-                    else:[m
[31m-                        temp_dict2["promotional_price"] = 0 [m
[31m-                        temp_dict2["now_price"] = 0[m
[31m-                        temp_dict2["was_price"] = 0[m
[32m+[m
[32m+[m[32m                    temp_dict2["promotional_price"] = dealshub_product_obj.get_promotional_price(dealshub_user_obj)[m
[32m+[m[32m                    temp_dict2["now_price"] = dealshub_product_obj.get_now_price(dealshub_user_obj)[m
[32m+[m[32m                    temp_dict2["was_price"] = dealshub_product_obj.get_was_price(dealshub_user_obj)[m
[32m+[m[32m                    temp_dict2["moq"] = dealshub_product_obj.get_moq(dealshub_user_obj)[m
                     temp_dict2["stock"] = dealshub_product_obj.stock[m
                     temp_dict2["is_new_arrival"] = dealshub_product_obj.is_new_arrival[m
                     temp_dict2["is_on_sale"] = dealshub_product_obj.is_on_sale[m
[36m@@ -4215,13 +4219,11 @@[m [mclass FetchUnitBannerProductsAPI(APIView):[m
             [m
             unit_banner_image_obj = UnitBannerImage.objects.get(uuid=unit_banner_image_uuid)[m
 [m
[31m-            is_user_authenticated = True[m
[32m+[m[32m            dealshub_user_obj = None[m
             if unit_banner_image_obj.banner.location_group.is_b2b==True:[m
[31m-                b2b_user_obj = None[m
                 if request.user != None and str(request.user)!="AnonymousUser":[m
                     logger.info("REQUEST USER: %s", str(request.user))[m
[31m-                    b2b_user_obj = B2BUser.objects.get(username = request.user.username)[m
[31m-                is_user_authenticated = check_account_status(b2b_user_obj)[m
[32m+[m[32m                    dealshub_user_obj = DealsHubUser.objects.get(username = request.user.username)[m
 [m
             custom_product_unit_banner_objs = CustomProductUnitBanner.objects.filter(unit_banner=unit_banner_image_obj, product__is_published=True)[m
             custom_product_unit_banner_objs = custom_product_unit_banner_objs.exclude(product__now_price=0).exclude(product__stock=0)[m
[36m@@ -4276,10 +4278,10 @@[m [mclass FetchUnitBannerProductsAPI(APIView):[m
                 temp_dict["name"] = dealshub_product_obj.get_name(language_code)[m
                 temp_dict["brand"] = dealshub_product_obj.get_brand(language_code)[m
                 temp_dict["seller_sku"] = dealshub_product_obj.get_seller_sku()[m
[31m-                temp_dict["now_price"] = dealshub_product_obj.now_price[m
[31m-                temp_dict["was_price"] = dealshub_product_obj.was_price[m
[31m-                temp_dict["promotional_price"] = dealshub_product_obj.promotional_price[m
[31m-                temp_dict["moq"] = dealshub_product_obj.moq[m
[32m+[m[32m                temp_dict["now_price"] = dealshub_product_obj.get_now_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict["was_price"] = dealshub_product_obj.get_was_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict["promotional_price"] = dealshub_product_obj.get_promotional_price(dealshub_user_obj)[m
[32m+[m[32m                temp_dict["moq"] = dealshub_product_obj.get_moq(dealshub_user_obj)[m
                 temp_dict["stock"] = dealshub_product_obj.stock[m
                 temp_dict["is_new_arrival"] = dealshub_product_obj.is_new_arrival[m
                 temp_dict["is_on_sale"] = dealshub_product_obj.is_on_sale[m
[1mdiff --git a/dealshub/views_dh.py b/dealshub/views_dh.py[m
[1mindex 03b3ea27..945f107c 100644[m
[1m--- a/dealshub/views_dh.py[m
[1m+++ b/dealshub/views_dh.py[m
[36m@@ -696,7 +696,7 @@[m [mclass FetchCartDetailsAPI(APIView):[m
                 temp_dict["quantity"] = unit_cart_obj.quantity[m
                 temp_dict["price"] = unit_cart_obj.product.get_actual_price_for_customer(dealshub_user_obj)[m
                 temp_dict["showNote"] = unit_cart_obj.product.is_promo_restriction_note_required(dealshub_user_obj)[m
[31m-                temp_dict["moq"] = unit_cart_obj.product.moq[m
[32m+[m[32m                temp_dict["moq"] = unit_cart_obj.product.get_moq(dealshub_user_obj)[m
                 temp_dict["stock"] = unit_cart_obj.product.stock[m
                 temp_dict["allowedQty"] = unit_cart_obj.product.get_allowed_qty()[m
                 temp_dict["currency"] = unit_cart_obj.product.get_currency()[m
